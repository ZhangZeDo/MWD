<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzd.api.dao.TJobMapper" >
  <resultMap id="BaseResultMap" type="com.zzd.api.domain.TJob" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_group" property="jobGroup" jdbcType="VARCHAR" />
    <result column="method_name" property="methodName" jdbcType="VARCHAR" />
    <result column="bean_clazz" property="beanClazz" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="cron_expression" property="cronExpression" jdbcType="VARCHAR" />
    <result column="params" property="params" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="update_datetime" property="updateDatetime" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, job_name, job_group, method_name, bean_clazz, status, cron_expression, params,
    remark, create_datetime, created_by, update_datetime, updated_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zzd.api.domain.TJobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_job
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_job
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzd.api.domain.TJobExample" >
    delete from t_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzd.api.domain.TJob" >
    insert into t_job (id, job_name, job_group,
      method_name, bean_clazz, status,
      cron_expression, params, remark,
      create_datetime, created_by, update_datetime,
      updated_by)
    values (#{id,jdbcType=CHAR}, #{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR},
      #{methodName,jdbcType=VARCHAR}, #{beanClazz,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
      #{cronExpression,jdbcType=VARCHAR}, #{params,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
      #{createDatetime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, #{updateDatetime,jdbcType=TIMESTAMP},
      #{updatedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzd.api.domain.TJob" >
    insert into t_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobGroup != null" >
        job_group,
      </if>
      <if test="methodName != null" >
        method_name,
      </if>
      <if test="beanClazz != null" >
        bean_clazz,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="cronExpression != null" >
        cron_expression,
      </if>
      <if test="params != null" >
        params,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createDatetime != null" >
        create_datetime,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="updateDatetime != null" >
        update_datetime,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="beanClazz != null" >
        #{beanClazz,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="cronExpression != null" >
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDatetime != null" >
        #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzd.api.domain.TJobExample" resultType="java.lang.Integer" >
    select count(*) from t_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_job
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobGroup != null" >
        job_group = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null" >
        method_name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.beanClazz != null" >
        bean_clazz = #{record.beanClazz,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.cronExpression != null" >
        cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.params != null" >
        params = #{record.params,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createDatetime != null" >
        create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDatetime != null" >
        update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null" >
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_job
    set id = #{record.id,jdbcType=CHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_group = #{record.jobGroup,jdbcType=VARCHAR},
      method_name = #{record.methodName,jdbcType=VARCHAR},
      bean_clazz = #{record.beanClazz,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
      params = #{record.params,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzd.api.domain.TJob" >
    update t_job
    <set >
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        job_group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="beanClazz != null" >
        bean_clazz = #{beanClazz,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="cronExpression != null" >
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDatetime != null" >
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzd.api.domain.TJob" >
    update t_job
    set job_name = #{jobName,jdbcType=VARCHAR},
      job_group = #{jobGroup,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      bean_clazz = #{beanClazz,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

    <sql id="queryByCaluse">
        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            <if test="param.searchInput !=null and param.searchInput !='' ">
                (job_name LIKE #{param.searchInput})
            </if>
        </trim>
    </sql>

    <select id="selectByJobDTO" resultMap="BaseResultMap" parameterType="com.zzd.api.dto.JobDTO">
        select
        <include refid="Base_Column_List" />
        from t_job
        <include refid="queryByCaluse"/>
        <if test="param.startNum >= 0" >
            limit ${param.startNum},${param.pageSize}
        </if>
    </select>
    <select id="selectByJobDTOTotal" resultType="int">
        select count(1) from t_job
        <include refid="queryByCaluse"/>
    </select>
</mapper>
